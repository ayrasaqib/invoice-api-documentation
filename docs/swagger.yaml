openapi: 3.0.0
info:
  title: Invoice Generation API
  description: |
    API for generating invoices in UBL 2.1 XML format and validating them
  version: 1.0.0
 
servers:
  - url: https://seng2021-production.up.railway.app/
    description: Deployed server
  - url: http://localhost:3000/api
    description: Local development server

tags:
  - name: Working routes
    description: Routes for the API which are functioning
  - name: In progress routes
    description: Routes for the API which are still under development

paths:
  /v1/admin/register:
    post:
      summary: Register a new company account
      description: Subscribe to the invoice generation service by registering a company account
      tags:
        - Working routes
      operationId: adminRegister
      requestBody:
        description: Details and password for the account
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                companyName: "Candlecraft Pty Ltd"
                email: "candle.craft@gmail.com"
                password: "candles123"
      responses:
        "200":
          $ref: "#/components/responses/SessionId"
        "400":
          description: Invalid input provided - email is not valid, account with this email already exists, companyName has invalid characters or is less than 3 characters, password is less than 8 characters or does not contain atleast one number and one letter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/admin/login:
    post:
      summary: Login to an account
      tags:
        - Working routes
      operationId: adminLogin
      requestBody:
        description: Email and password to login to account
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: "candle.craft@gmail.com"
                password: "candles123"
      responses:
        "200":
          $ref: "#/components/responses/SessionId"
        "400":
          description: Invalid input provided - no account with this email exists, password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/admin/logout:
    post:
      summary: Logout from an active session
      tags:
        - In progress routes
      operationId: adminLogout
      requestBody:
        description: sessionId of the active session to logout from
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: integer
              example:
                sessionId: 53896565
      responses:
        "200":
          description: User successfully logged out
        "401":
          $ref: "#/components/responses/Unauthorised"
  /health:
    get:
      summary: Indicates the aliveness of the service
      tags:
        - Working routes
      operationId: getHealth
      responses:
        "200":
          description: Service is running successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                  serviceUptime:
                    type: string
                  memoryUsage:
                    type: string
                  database:
                    type: string
                    enum:
                      - connected
                example:
                  status: success
                  serviceUptime: 1 hour, 12 minutes
                  memoryUsage: 30MB
                  database: connected
        "500":
          description: Service is unavailable and there was an internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - fail
                  errorMessage:
                    type: string
                example:
                  status: fail
                  errorMessage: "The database is not connected"    
  /v1/invoice/create:
    post:
      summary: Create new invoice
      description: Use data from a document (e.g. order document) to create an invoice resource
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: createInvoice
      parameters:
        - name: sessionid
          in: header
          required: true
          schema:
            type: number
          description: sessionid used for authentication
      requestBody:
        description: Order used to create invoice resource
        required: true
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/Order"
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Invoice resource created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
                example:
                  invoiceId: 28746393
        "400":
          description: Invalid input provided - not in the correct format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /v1/invoice/{invoiceid}/xml:
    get:
      summary: Converts an invoice resource into UBL 2.1 XML
      description: Converts invoice with the given invoiceid to UBL 2.1 XML format and returns it
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: invoiceToXml
      parameters:
        - name: sessionid
          in: header
          required: true
          schema:
            type: number
          description: sessionid used for authentication
        - name: invoiceid
          in: path
          required: true
          schema:
            type: number
          description: The id used to identify invoice resource
      responses:
        "200":
          description: Invoice in XML successfully generated
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/InvoiceXml"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /v1/invoice/validate:
    post:
      summary: Submits an invoice for validation
      description: Validates that invoice in XML matches UBL formatting and schema
      tags:
        - Working routes
      operationId: validateInvoice
      requestBody:
        description: Invoice in xml (as a UTF-8 encoded string) to validate
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: string
                  format: xml
                  example: <?xml version="1.0" encoding="UTF-8"?><Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" <cbc:UBLVersionID>2.1</cbc:UBLVersionID><cbc:ID>INV-12345</cbc:ID><cbc:IssueDate>2025-03-16</cbc:IssueDate> <cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode><cac:AccountingSupplierParty><cac:Party><cbc:Name>Supplier Inc.</cbc:Name></cac:Party></cac:AccountingSupplierParty><cac:AccountingCustomerParty> <cac:Party><cbc:Name>Customer LLC</cbc:Name></cac:Party></cac:AccountingCustomerParty><cac:InvoiceLine><cbc:ID>1</cbc:ID><cbc:InvoicedQuantity unitCode="EA">10</cbc:InvoicedQuantity><cbc:LineExtensionAmount currencyID="USD">100.00</cbc:LineExtensionAmount> <cac:Item><cbc:Description>Office Chair</cbc:Description></cac:Item></cac:InvoiceLine><cac:LegalMonetaryTotal><cbc:PayableAmount currencyID="USD">110.00</cbc:PayableAmount></cac:LegalMonetaryTotal></Invoice>
      responses:
        "200":
          description: Invoice successfully received and processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  validated:
                    type: boolean
                  message:
                    type: string
                example:
                  validated: true
                  message:  "Invoice is in valid UBL 2.1 XML format"
  /v1/invoices/list:
    get:
      summary: Lists all invoices by buyer party
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: listInvoices
      parameters:
        - name: sessionid
          in: header
          required: true
          schema:
            type: number
          description: sessionid used for authentication
        - name: partyNameBuyer
          in: query
          required: true
          schema:
            type: string
          description: buyer party name to filter invoices by
      responses:
        "200":
          description: Successful retrieval of invoices list
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices:
                    type: array
                    items: 
                      type: object
                      properties:
                        invoiceId:
                          type: integer
                          example: 123456
                        salesOrderId:
                          type: integer
                          example: 765489
                        issueDate:
                          type: string
                          example: 2025-03-02
                        partyNameBuyer:
                          type: string
                          example: Candlecraft Pty Ltd
                        payableAmount:
                          type: string
                          example: AUD 100
        "400":
          description: Invalid input provided - partyNameBuyer has invalid characters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorised"
  /v1/invoice/{invoiceid}:
    get:
      summary: View an invoice
      description:  View an invoice using its invoiceid
      tags:
        - Working routes
      security:
        - Authentication: []
      operationId: viewInvoice
      parameters:
        - name: sessionid
          in: header
          required: true
          schema:
            type: number
          description: sessionid used for authentication
        - name: invoiceid
          in: path
          required: true
          schema:
            type: number
          description:  invoiceid used to identify invoice resource
      responses:
        "200":
          description: Successful retrieval of invoice
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
                    example: 123456
                  issueDate:
                    type: string
                    example: 2025-03-02
                  partyNameBuyer:
                    type: string
                    example: Candlecraft Pty Ltd
                  payableAmount:
                    type: number
                    example: 100
                  currencyCode:
                    type: string
                    example: AUD
                  salesOrderId:
                    type: integer
                    example: 765489
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          example: Scented soy candle
                        amount:
                          type: integer
                          example: 10
                        unitCode:
                          type: string
                          example: PCS
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"
    put:
      summary: Update information in an invoice
      description: Update provided information about an invoice resource
      tags:
        - In progress routes
      security:
        - Authentication: []
      operationId: updateInvoice
      parameters:
        - name: sessionid
          in: header
          required: true
          schema:
            type: number
          description: sessionid used for authentication
        - name: invoiceid
          in: path
          required: true
          schema:
            type: number
          description: invoiceid used to identify invoice resource
      requestBody:
        description: Details for updating an invoice resource
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toUpdate:
                  type: string
                  enum:
                    - payableAmount
                    - invoiceStartDate
                    - invoiceEndDate
                newData:
                  type: string
              example:
                toUpdate: payableAmount
                newData: "$130.00"
      responses:
        "200":
          description: Invoice successfully updated
        "400":
          description: Invalid input provided - newData is the same as current data, newData is an empty string or invalid (e.g. negative), toUpdate value is not part of Enum
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorised"

components:
  securitySchemes:
    Authentication:
      type: apiKey
      in: header
      name: sessionid
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      example:
        error: "message to describe the error"
    Order:
      type: object
      properties:
        salesOrderId:
          type: integer
          example: 123456
        UUID:
          type: string
          example: 6E09886B
        issueDate:
          type: string
          example: 2025-01-14
        documentCurrencyCode:
          type: string
          example: AUD
        buyerCustomerParty:
          type: object
          properties:
            name:
              type: string
              example: IYT Corporation
            contact:
              type: number
              example: 01272653214
        sellerSupplierParty:
          type: object
          properties:
            name:
              type: string
              example: Consortial
            contact:
              type: number
              example: 01581233856
        deliveryAddress:
          type: string
          example: 56A Avon Way, Sydney, Australia, 2345
        deliveryPeriod:
          type: object
          properties:
            startDate:
              type: string
              example: 2025-01-24
            endDate:
              type: string
              example: 2025-02-03
        deliveryTerms:
          type: string
          example: 1% deduction for late delivery
        payableAmount:
          type: number
          example: 100
        orderLine:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: integer
                example: 9876
              quantity:
                type: string
                example: 5
              lineExtensionAmount:
                type: number
                example: 50
              description:
                type: string
                example: Battery component
    InvoiceXml:
      type: object
      xml:
        name: invoice
      properties:
        invoiceId:
          type: integer
          example: 123456
        salesOrderId:
          type: integer
          example: 98765
        issueDate:
          type: string
          example: 2025-03-02
        invoiceStartDate:
          type: string
          example: 2025-03-14
        invoiceEndDate:
          type: string
          example: 2025-04-02
        documentCurrencyCode:
          type: string
          example: AUD
        accountingSupplierParty:
          type: string
          example: Candlecraft Pty Ltd
        accountingCustomerParty:
          type: string
          example: Dusk
        payableAmount:
          type: number
          example: 300
        items:
          type: array
          items:
            type: object
            properties:
              itemId:
                type: integer
                example: 8765
              quantity:
                type: integer
                example: 50
              lineExtensionAmount:
                type: number
                example: 300
              description:
                type: string
                example: Scented soy candles

  responses:
    NotFound:
      description: An invoice with the given invoiceid was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    SessionId:
      description: Id for the user's current logged in session
      content:
        application/json:
          schema:
            type: object
            properties:
              sessionId:
                type: integer
            example:
              sessionId: 53896565
    Unauthorised:
      description: Unauthorised - sessionId is not valid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
            